{"ast":null,"code":"var _jsxFileName = \"/Users/annaperminova/Documents/study/react/HW/todos-hooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo({\n  index,\n  todo\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: todo.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n} // function TodoForm({addTodo}){\n//   const [value, setValue] = useState('')\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     if(!value) return;\n//     addTodo(value);\n//     setValue('');\n//   }\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input className='input' value={value} onChange={e => setValue(e => e.target.value)} placeholder='Add'/>\n//     </form>\n//   )\n// }\n\n\n_c = Todo;\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([{\n    text: 'Compile the Spring app for deployment',\n    isCompleted: false\n  }, {\n    text: 'Open port 8080',\n    isCompleted: false\n  }, {\n    text: 'SSH into the VM',\n    isCompleted: false\n  }]); // const addTodo = text => {\n  //   const newTodos = [...todos, {text}];\n  //   setTodos(newTodos)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: todos.map((todo, index) => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        index: index,\n        todo: todo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nbPrgMkB6w3cMKIcIYhZsD6p10A=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Todo\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/annaperminova/Documents/study/react/HW/todos-hooks/src/App.js"],"names":["React","useState","Todo","index","todo","text","App","todos","setTodos","isCompleted","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;;;AAGA,SAASC,IAAT,CAAc;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAd,EAA4B;AAC1B,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cAAuBA,IAAI,CAACC;AAA5B;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAnBSH,I;;AAqBT,SAASI,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CACjC;AAACI,IAAAA,IAAI,EAAE,uCAAP;AACAI,IAAAA,WAAW,EAAE;AADb,GADiC,EAGjC;AAACJ,IAAAA,IAAI,EAAE,gBAAP;AACAI,IAAAA,WAAW,EAAE;AADb,GAHiC,EAKjC;AAACJ,IAAAA,IAAI,EAAE,iBAAP;AACAI,IAAAA,WAAW,EAAE;AADb,GALiC,CAAD,CAAlC,CADa,CAUb;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGF,KAAK,CAACG,GAAN,CAAU,CAACN,IAAD,EAAOD,KAAP,KAAe;AACxB,0BAAO,QAAC,IAAD;AAAkB,QAAA,KAAK,EAAEA,KAAzB;AAAgC,QAAA,IAAI,EAAEC;AAAtC,SAAWD,KAAX;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAvBQG,G;;MAAAA,G;AAyBT,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\n\nfunction Todo({index, todo}){\n  return (\n    <div className='todo'>{todo.text}</div>\n  )\n}\n\n// function TodoForm({addTodo}){\n//   const [value, setValue] = useState('')\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     if(!value) return;\n//     addTodo(value);\n//     setValue('');\n//   }\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input className='input' value={value} onChange={e => setValue(e => e.target.value)} placeholder='Add'/>\n//     </form>\n//   )\n// }\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    {text: 'Compile the Spring app for deployment',\n    isCompleted: false},\n    {text: 'Open port 8080',\n    isCompleted: false},\n    {text: 'SSH into the VM',\n    isCompleted: false}\n  ])\n\n  // const addTodo = text => {\n  //   const newTodos = [...todos, {text}];\n  //   setTodos(newTodos)\n  // }\n\n  return (\n    <div className=\"app\">\n      {todos.map((todo, index)=>{\n        return <Todo key={index} index={index} todo={todo}/>\n      })}\n      {/* <TodoForm addTodo={addTodo} /> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}