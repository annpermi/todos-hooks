{"ast":null,"code":"var _jsxFileName = \"/Users/annaperminova/Documents/study/react/HW/todos-hooks/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo({\n  todo,\n  index,\n  completeTodo\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textDecoration: todo.isCompleted ? 'line-through' : ''\n    },\n    className: \"todo\",\n    children: [todo.text, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => completeTodoTodo(index),\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Todo;\n\nfunction TodoForm({\n  addTodo\n}) {\n  _s();\n\n  const [value, setValue] = useState('');\n  console.log(value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      value: value,\n      onChange: e => setValue(e.target.value),\n      placeholder: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c2 = TodoForm;\n\nfunction App() {\n  _s2();\n\n  const [todos, setTodos] = useState([{\n    text: 'Compile the Spring app for deployment',\n    isCompleted: false\n  }, {\n    text: 'Open port 8080',\n    isCompleted: false\n  }, {\n    text: 'SSH into the VM',\n    isCompleted: false\n  }]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, {\n      text\n    }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n        addTodo: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), todos.map((todo, index) => {\n        return /*#__PURE__*/_jsxDEV(Todo, {\n          index: index,\n          todo: todo\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"nbPrgMkB6w3cMKIcIYhZsD6p10A=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Todo\");\n$RefreshReg$(_c2, \"TodoForm\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/annaperminova/Documents/study/react/HW/todos-hooks/src/App.js"],"names":["React","useState","Todo","todo","index","completeTodo","textDecoration","isCompleted","text","completeTodoTodo","TodoForm","addTodo","value","setValue","console","log","handleSubmit","e","preventDefault","target","App","todos","setTodos","newTodos","map"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\n\nfunction Todo({todo, index, completeTodo}){\n  return (\n    <div style={{textDecoration: todo.isCompleted ? 'line-through' : ''}} className='todo'>{todo.text}\n      <div>\n        <button onClick={()=>completeTodoTodo(index)}>Complete</button>\n      </div>\n    </div>\n  )\n}\n\nfunction TodoForm({ addTodo }){\n  const [value, setValue] = useState('');\n  console.log(value)\n  const handleSubmit = e => {\n    e.preventDefault();\n    if(!value) return;\n    addTodo(value);\n    setValue('');\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type='text' className='input' value={value} onChange={e => setValue(e.target.value)} placeholder='Add'/>\n    </form>\n  )\n}\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    {text: 'Compile the Spring app for deployment',\n    isCompleted: false},\n    {text: 'Open port 8080',\n    isCompleted: false},\n    {text: 'SSH into the VM',\n    isCompleted: false}\n  ])\n\n  const addTodo = text => {\n    const newTodos = [...todos, {text}];\n    setTodos(newTodos)\n  }\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos)\n  }\n\n  return (\n    <div className=\"app\">\n      <div className='todo-list'>\n        <TodoForm addTodo={addTodo} />\n        {todos.map((todo, index)=>{\n          return <Todo key={index} index={index} todo={todo}/>\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}